#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// Node structure
struct Node {
    char name[50];
    struct Node* next;
};

// Front and rear pointers
struct Node* front = NULL;
struct Node* rear = NULL;

// Enqueue operation
void enqueue(char* name) {
    struct Node* temp = (struct Node*)malloc(sizeof(struct Node));
    strcpy(temp->name, name);
    temp->next = NULL;

    if (rear == NULL) {
        front = rear = temp;
    } else {
        rear->next = temp;
        rear = temp;
    }

    printf("Customer '%s' added to the queue.\n", name);
}

// Dequeue operation
void dequeue() {
    if (front == NULL) {
        printf("Queue is empty. No customers to serve.\n");
        return;
    }

    struct Node* temp = front;
    printf("Customer '%s' served and removed from the queue.\n", temp->name);
    front = front->next;

    if (front == NULL) {
        rear = NULL;
    }

    free(temp);
}

// Display queue
void displayQueue() {
    if (front == NULL) {
        printf("Queue is empty.\n");
        return;
    }

    struct Node* temp = front;
    printf("Customers in queue:\n");
    while (temp != NULL) {
        printf("- %s\n", temp->name);
        temp = temp->next;
    }
}

int main() {
    int choice;
    char name[50];

    while (1) {
        printf("\n--- Bank Customer Queue ---\n");
        printf("1. Enqueue customer\n");
        printf("2. Dequeue customer\n");
        printf("3. Display queue\n");
        printf("4. Exit\n");
        printf("Choose an option: ");
        scanf("%d", &choice);
        getchar(); // to consume newline after scanf

        switch (choice) {
            case 1:
                printf("Enter customer name: ");
                fgets(name, sizeof(name), stdin);
                name[strcspn(name, "\n")] = '\0'; // remove newline
                enqueue(name);
                break;
            case 2:
                dequeue();
                break;
            case 3:
                displayQueue();
                break;
            case 4:
                printf("Exiting...\n");
                exit(0);
            default:
                printf("Invalid option. Try again.\n");
        }
    }

    return 0;
}